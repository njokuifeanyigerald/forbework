name: Fintech App CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: pip install -r requirements.txt

    #   - name: Run SonarQube Scan
    #     uses: sonarsource/sonarqube-scan-action@master
    #     with:
    #       projectKey: fintech-app
    #       host: ${{ secrets.SONAR_HOST_URL }}
    #     env:
    #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fintech-app:${{ github.sha }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/fintech-app:${{ github.sha }} \
            ${{ secrets.DOCKERHUB_USERNAME }}/fintech-app:latest

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fintech-app:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fintech-app:latest

      - name: Scan Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/fintech-app:${{ github.sha }}
          format: table
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH
          ignorefile: .trivyignore

  deploy:
    needs: build-and-scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.7.1
        with:
          minikube version: 'latest'
          kubernetes version: 'latest'
          driver: docker
          start args: '--driver=docker'

      - name: Deploy to Minikube
        run: |
          sed -i "s|{{IMAGE}}|${{ secrets.DOCKERHUB_USERNAME }}/fintech-app:${{ github.sha }}|g" k8s/deployment.yml
          kubectl apply -f k8s/deployment.yml

      - name: Verify Deployment
        run: kubectl rollout status deployment/fintech-app -n default